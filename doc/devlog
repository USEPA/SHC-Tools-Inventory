# devlog - dev records ongoing work; managers review and direct
## Items are prepended with #DONE when completed.
## #DONE items floated above incomplete items.
## New items are appended to the end of this file.
## Incomplete items are manually scraped and sunk.
## #devAdded items sink beneath incomplete assignments.
## Resulting order: #DONE items, incomplete items, #devAdded items
==================================================================

- #DONE Put disclaimer text into tool:
  - # "The tools listed are for informational purposes only.  The EPA and its employees do not endorse any product, services, or organizations listed."

- #DONE Show the last time a tool's information was updated.
  - # This is not simply the last time the record was updated.
  - # use .READExportDetail.InfoResourceDetail.ModelDetailsDetail.DetailsLastKnownSoftwareUpdate
    # from detail URL

- #DONE names longer than 35 chars, even autocompleted, return no results
  - # truncate name searched to 30 chars

- #DONE #devAdded Search acronym as well as name.

- #DONE Remove all underscores in details' titles.

- #DONE Test tool for internal release in internet explorer, safari, firefox, and opera.
  - # Don't hold for bugs in minor browsers.
  - # remake page with template at
    - # https://www.epa.gov/sites/all/libraries/template/standalone.html#main-content

- #DONE Write the decision-sector descriptions.

- #DONE Return only one feedback indicating no results from simple search.

- #DONE Try updating READ records via the web-app again.
  - # resolution implemented in webapp's js
  - # results will always include EPA's contact in a role of either
    - # Primary Info Resource Steward(PIRS) or
    - # Info Mgmt Officer(IMO)

- #DONE use an access database to label tools with concepts from the DPL
  - # embed SQL queries in VBA with "CurrentDb.Execute <sql_query_string>"
  - # acronym = tool
  - # concept = [final] node
  - # SQL-query to append tool:<tool_i>,concept:<concept_i> to junction table acting as a "many to many" relation between tools and concepts
    # "INSERT INTO tbl_junction_acronym_node (acronym, node) VALUES ('" & strAcronym & "', '" & strConcept & "');"

- #devAdded Replace '[object Object]' with 'No Data Available.'
  - # WIP attempting to construct fncn using JSON.stringify == '[object Object]'

- #devAdded Make search results accessible. 

- #devAdded Display "no results" on detailed search as in simple search.

- #devAdded Remove second mobile-bar.

- #devAdded Replace keyIdentifier in keyboard_utils.js 
  - # keyIdentifier support is to be removed from Chrome
  - # use 'keydown' in example at https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key

- #devAdded Fix "Save All Records."

- #devAdded Fix "Save This Record."

- #devAdded Add ResourceBasicSearchURL = 'https://ofmpub.epa.gov:443/readwebservices/v1/ResourceSearch'
  - # ajax call includes
    - # Data : { QueryText: queryBothNameAndAcronym.substr(0,34) }
  - # this does a single ajax call to replace doubled search in simpleSearchClk3()

- return only records in one of the four decision sectors from both simple search and detailed search

- give results browse-functionality
  - create keywords column in #resultsTable
  // display keywords in a column of #resultsTable
  if (!($.data(document.body,resultsKeywords))){
    $.data(document.body,resultsKeywords)={record: []};
  }
  - scrape keywords from each record in #resultsTable
  // scrape keywords from each record in #resultsTable
  for row in $(tableRef).rows
    $.ajax({
      type: "GET",
      url: resourceDetailURL,
      data: {
        ResourceId: ResourceID,
        Format: "JSON"
      },
      dataType: "json",
      success: function(data) {
        console.log(data.READExportDetail.InfoResourceDetail.KeywordDetail.KeywordText)
      }
    });
  - DPL is used to find related keywords for each keyword
  - Each Keyword’s text links to a search for the keyword
  - Results from searches for keywords are placed in the existing table
  - Records may be “browsed by keyword” in this way

- implement a machine-learning-backend to grow application
  - a button indicates this tool is not pertinent
    - adds negative weight = "set of selected roles, subroles,..." for y_i = "this tool"
  - a button indicates this tool is pertinent
    - adds positive weight to X = "set of selected roles, subroles,..." for y_i = "this tool"
  - weights can be used to rank tools
  - weights may determine which tools appear for a given input
  - there is an initial guess at how the tools should be classified from DPL
  - give the initial guess a weight so it may be outweighed by sufficient input from users
  - HINT: investigate using a Bayes-net for a model, as suggested by Eric

- tag initial set of ~70 tools in all decision sectors with appropriate final nodes from the DPL

- tag protocol candidate for tagging a set of tools:
  1.get details of tool by any of the following methods
    - get JSON of all details directly from read-web-services:
      - collect details about a tool in one decision sector from:
        - https://ofmpub.epa.gov/readwebservices/v1/ResourceDetail?ResourceId=<RESOURCE_ID>
          - where <RESOURCE_ID> is the read-id of the tool
    - note that there are data standards which need decoded, such as integers encoding strings
      - find map of all encodings in docs
    - use tool-describer.html
      - tool-describer.html functions as a web-service with address
        - dev/tool-describer.html?id=<RESOURCE_ID>
          - where <RESOURCE_ID> is the read-id of the tool
    - use the  display of details at EPA's System of Registries(SoR) with address
      - https://ofmpub.epa.gov/sor_internet/registry/systmreg/resourcedetail/general/description/description.do?infoResourcePkId=<RESOURCE_ID>
        - where <RESOURCE_ID> is the read-id of the tool
        - note that not all details are shown
        - note that there are data standards which need decoded, such as integers encoding strings
          - find map of all encodings in docs
  2.search system sketch for keywords
    - where keywords are from description, model inputs, model outputs, users' manual, and other descriptors
    - consider concepts related to concepts that match searched keywords
  3.use READ_to_DPL.accdb to tag relevant concepts to tool
  4.export all tools and their concepts to csv in schema <TOOL>,<CONCEPT>
  5.use CSV importation tool to import values from csv to javascript literals

- tag protocol notes
  - tag with labels that are a generalization of functionality
    - EG, label "Sequestration/Storage/Accumulation of Toxins or Pollutants" for
      model-output of "total mass discharged of each pollutant (lbs or kg)"
  - scrape additional resources if READ\'s description yields too little
    - fields, manuals, and external descriptions:
      - descriptive fields: model-inputs, model-outputs, keywords
      - manuals in fields: user\'s manual, source of support materials, and support url
      - external descriptions linked in fields: url, source of support materials, and support url
  - 


- absent from Decision Path Library(DPL)
  - site-scale
    - heating
    - cooling
    - insulation
    - efficiencies
    - energy-modeling
    - duct-placement
    - passive solar such as window placement and roof-reflectance
    - roof-type
    - thermal emittance
    - reflectance
    - noise-costs
    - accident-costs
    - 
  - locality-scale
    - energy costs
    - energy-type availability
    - auto-occupancies AKA vehicular occupancy
    - 
  - scale-free
    - import, export, and other trade
    - simulation(more specific than modeling)
    - life-cycle-assessment(LCA)
    - terrestrial acidification
    - sentiment
    - transit-network-output
    - vehicular operating-costs
    - roadway utilization
    - carbon-equivalent
    - carbon-footprint
    - vehicle-miles-traveled
    - feasibility
    - c2h4
    - goals and targets
    - best practices
    - disposal costs
    - metal wastes and disposal
    - willingness to pay
    - loading of pollution
    - detention ponds
    - grass swale
    - outfall
    - 

- bad info in READ
  - 12534: source of support materials link broken
  - 12520: typo in model-outputs "tonns C2H4"
  - 12530: typo in model-inputs "runiff"
  - 
