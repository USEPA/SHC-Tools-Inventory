# devlog - dev records ongoing work; managers review and direct
## Items are prepended with #DONE when completed.
## #DONE items floated above incomplete items.
## New items are appended to the end of this file.
## Incomplete items are manually scraped and sunk.
## #devAdded items sink beneath incomplete assignments.
## Resulting order: #DONE items, incomplete items, #devAdded items
==================================================================

- #DONE Put disclaimer text into tool:
  - # "The tools listed are for informational purposes only.  The EPA and its employees do not endorse any product, services, or organizations listed."

- #DONE Show the last time a tool's information was updated.
  - # This is not simply the last time the record was updated.
  - # use .READExportDetail.InfoResourceDetail.ModelDetailsDetail.DetailsLastKnownSoftwareUpdate
    # from detail URL

- #DONE names longer than 35 chars, even autocompleted, return no results
  - # truncate name searched to 30 chars

- #DONE #devAdded Search acronym as well as name.

- #DONE Remove all underscores in details' titles.

- #DONE Test tool for internal release in internet explorer, safari, firefox, and opera.
  - # Don't hold for bugs in minor browsers.
  - # remake page with template at
    - # https://www.epa.gov/sites/all/libraries/template/standalone.html#main-content

- #DONE Write the decision-sector descriptions.

- #DONE Return only one feedback indicating no results from simple search.

- #DONE Try updating READ records via the web-app again.
  - # resolution implemented in webapp's js
  - # results will always include EPA's contact in a role of either
    - # Primary Info Resource Steward(PIRS) or
    - # Info Mgmt Officer(IMO)

- #DONE use an access database to label tools with concepts from the DPL
  - # embed SQL queries in VBA with "CurrentDb.Execute <sql_query_string>"
  - # acronym = tool
  - # concept = [final] node
  - # SQL-query to append tool:<tool_i>,concept:<concept_i> to junction table acting as a "many to many" relation between tools and concepts
    # "INSERT INTO tbl_junction_acronym_node (acronym, node) VALUES ('" & strAcronym & "', '" & strConcept & "');"

- #devAdded Replace '[object Object]' with 'No Data Available.'
  - # WIP attempting to construct fncn using JSON.stringify == '[object Object]'

- #devAdded Make search results accessible. 

- #devAdded Display "no results" on detailed search as in simple search.

- #devAdded Remove second mobile-bar.

- #devAdded Replace keyIdentifier in keyboard_utils.js 
  - # keyIdentifier support is to be removed from Chrome
  - # use 'keydown' in example at https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key

- #devAdded Fix "Save All Records."

- #devAdded Fix "Save This Record."

- #devAdded Add ResourceBasicSearchURL = 'https://ofmpub.epa.gov:443/readwebservices/v1/ResourceSearch'
  - # ajax call includes
    - # Data : { QueryText: queryBothNameAndAcronym.substr(0,34) }
  - # this does a single ajax call to replace doubled search in simpleSearchClk3()

- return only records in one of the four decision sectors from both simple search and detailed search

- give results browse-functionality
  - create keywords column in #resultsTable
  // display keywords in a column of #resultsTable
  if (!($.data(document.body,resultsKeywords))){
    $.data(document.body,resultsKeywords)={record: []};
  }
  - scrape keywords from each record in #resultsTable
  // scrape keywords from each record in #resultsTable
  for row in $(tableRef).rows
    $.ajax({
      type: "GET",
      url: resourceDetailURL,
      data: {
        ResourceId: ResourceID,
        Format: "JSON"
      },
      dataType: "json",
      success: function(data) {
        console.log(data.READExportDetail.InfoResourceDetail.KeywordDetail.KeywordText)
      }
    });
  - DPL is used to find related keywords for each keyword
  - Each Keyword’s text links to a search for the keyword
  - Results from searches for keywords are placed in the existing table
  - Records may be “browsed by keyword” in this way

- implement a machine-learning-backend to grow application
  - a button indicates this tool is not pertinent
    - adds negative weight = "set of selected roles, subroles,..." for y_i = "this tool"
  - a button indicates this tool is pertinent
    - adds positive weight to X = "set of selected roles, subroles,..." for y_i = "this tool"
  - weights can be used to rank tools
  - weights may determine which tools appear for a given input
  - there is an initial guess at how the tools should be classified from DPL
  - give the initial guess a weight so it may be outweighed by sufficient input from users
  - HINT: investigate using a Bayes-net for a model, as suggested by Eric
